{"ast":null,"code":"import _regeneratorRuntime from \"C:/Projects/antonvdi.github.io/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Projects/antonvdi.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toArray from \"C:/Projects/antonvdi.github.io/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _objectWithoutProperties from \"C:/Projects/antonvdi.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"font\", \"loader\", \"size\", \"height\", \"bevelThickness\", \"bevelSize\", \"bevelEnabled\", \"bevelOffset\", \"bevelSegments\", \"curveSegments\", \"children\"],\n    _excluded2 = [\"font\", \"loader\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { FontLoader, TextGeometry } from 'three-stdlib';\nvar types = ['string', 'number'];\n\nvar getTextFromChildren = function getTextFromChildren(children) {\n  var label = '';\n  var rest = [];\n  React.Children.forEach(children, function (child) {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label].concat(rest);\n};\n\nvar Text3DBase = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var font = _ref.font,\n      loader = _ref.loader,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 1 : _ref$size,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 0.2 : _ref$height,\n      _ref$bevelThickness = _ref.bevelThickness,\n      bevelThickness = _ref$bevelThickness === void 0 ? 0.1 : _ref$bevelThickness,\n      _ref$bevelSize = _ref.bevelSize,\n      bevelSize = _ref$bevelSize === void 0 ? 0.01 : _ref$bevelSize,\n      _ref$bevelEnabled = _ref.bevelEnabled,\n      bevelEnabled = _ref$bevelEnabled === void 0 ? false : _ref$bevelEnabled,\n      _ref$bevelOffset = _ref.bevelOffset,\n      bevelOffset = _ref$bevelOffset === void 0 ? 0 : _ref$bevelOffset,\n      _ref$bevelSegments = _ref.bevelSegments,\n      bevelSegments = _ref$bevelSegments === void 0 ? 4 : _ref$bevelSegments,\n      _ref$curveSegments = _ref.curveSegments,\n      curveSegments = _ref$curveSegments === void 0 ? 8 : _ref$curveSegments,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  React.useMemo(function () {\n    extend({\n      RenamedTextGeometry: TextGeometry\n    });\n  }, []);\n\n  var _font = React.useMemo(function () {\n    return loader.parse(font);\n  }, [font]);\n\n  var opts = useMemo(function () {\n    return {\n      font: _font,\n      size: size,\n      height: height,\n      bevelThickness: bevelThickness,\n      bevelSize: bevelSize,\n      bevelEnabled: bevelEnabled,\n      bevelSegments: bevelSegments,\n      bevelOffset: bevelOffset,\n      curveSegments: curveSegments\n    };\n  }, [_font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelOffset, curveSegments]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  var _useMemo = useMemo(function () {\n    return getTextFromChildren(children);\n  }, [children]),\n      _useMemo2 = _toArray(_useMemo),\n      label = _useMemo2[0],\n      rest = _useMemo2.slice(1);\n\n  var args = React.useMemo(function () {\n    return [label, opts];\n  }, [label, opts]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\nvar Text3DSuspend = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var font = _ref2.font,\n      loader = _ref2.loader,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  var _font = suspend( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var json;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(font);\n\n          case 2:\n            _context.next = 4;\n            return _context.sent.json();\n\n          case 4:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [font]);\n\n  return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n    ref: ref,\n    font: _font,\n    loader: loader\n  }));\n});\nvar Text3D = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var loader = React.useMemo(function () {\n    return new FontLoader();\n  }, []);\n\n  if (typeof props.font === 'string') {\n    return /*#__PURE__*/React.createElement(Text3DSuspend, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  }\n});\nexport { Text3D };","map":{"version":3,"names":["_extends","React","useMemo","extend","suspend","FontLoader","TextGeometry","types","getTextFromChildren","children","label","rest","Children","forEach","child","includes","push","Text3DBase","forwardRef","ref","font","loader","size","height","bevelThickness","bevelSize","bevelEnabled","bevelOffset","bevelSegments","curveSegments","props","RenamedTextGeometry","_font","parse","opts","args","createElement","Text3DSuspend","fetch","json","Text3D"],"sources":["C:/Projects/antonvdi.github.io/node_modules/@react-three/drei/core/Text3D.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { FontLoader, TextGeometry } from 'three-stdlib';\n\nconst types = ['string', 'number'];\n\nconst getTextFromChildren = children => {\n  let label = '';\n  const rest = [];\n  React.Children.forEach(children, child => {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label, ...rest];\n};\n\nconst Text3DBase = /*#__PURE__*/React.forwardRef(({\n  font,\n  loader,\n  size = 1,\n  height = 0.2,\n  bevelThickness = 0.1,\n  bevelSize = 0.01,\n  bevelEnabled = false,\n  bevelOffset = 0,\n  bevelSegments = 4,\n  curveSegments = 8,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => {\n    extend({\n      RenamedTextGeometry: TextGeometry\n    });\n  }, []);\n\n  const _font = React.useMemo(() => loader.parse(font), [font]);\n\n  const opts = useMemo(() => {\n    return {\n      font: _font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelSegments,\n      bevelOffset,\n      curveSegments\n    };\n  }, [_font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelOffset, curveSegments]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  const [label, ...rest] = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [label, opts], [label, opts]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\nconst Text3DSuspend = /*#__PURE__*/React.forwardRef(({\n  font,\n  loader,\n  ...props\n}, ref) => {\n  const _font = suspend(async () => {\n    const json = await (await fetch(font)).json();\n    return json;\n  }, [font]);\n\n  return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n    ref: ref,\n    font: _font,\n    loader: loader\n  }));\n});\nconst Text3D = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const loader = React.useMemo(() => new FontLoader(), []);\n\n  if (typeof props.font === 'string') {\n    return /*#__PURE__*/React.createElement(Text3DSuspend, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  }\n});\n\nexport { Text3D };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}